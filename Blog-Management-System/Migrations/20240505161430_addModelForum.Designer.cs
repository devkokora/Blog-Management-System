// <auto-generated />
using System;
using Blog_Management_System.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Blog_Management_System.Migrations
{
    [DbContext(typeof(BlogManagementSystemDbContext))]
    [Migration("20240505161430_addModelForum")]
    partial class addModelForum
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Blog_Management_System.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("CategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            CategoryName = "alien"
                        },
                        new
                        {
                            CategoryId = 2,
                            CategoryName = "ufo"
                        },
                        new
                        {
                            CategoryId = 3,
                            CategoryName = "dog"
                        },
                        new
                        {
                            CategoryId = 4,
                            CategoryName = "cat"
                        },
                        new
                        {
                            CategoryId = 5,
                            CategoryName = "nasa"
                        },
                        new
                        {
                            CategoryId = 6,
                            CategoryName = "zombie"
                        });
                });

            modelBuilder.Entity("Blog_Management_System.Models.Comment", b =>
                {
                    b.Property<int>("CommentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CommentId"));

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ForumId")
                        .HasColumnType("int");

                    b.Property<int>("Like")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("CommentId");

                    b.HasIndex("ForumId");

                    b.HasIndex("UserId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("Blog_Management_System.Models.Forum", b =>
                {
                    b.Property<int>("ForumId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ForumId"));

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created_at")
                        .HasColumnType("datetime2");

                    b.Property<int>("Like")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ForumId");

                    b.HasIndex("UserId");

                    b.ToTable("Forums");

                    b.HasData(
                        new
                        {
                            ForumId = 1,
                            Body = "hello",
                            Created_at = new DateTime(2024, 5, 5, 23, 14, 30, 704, DateTimeKind.Local).AddTicks(6469),
                            Like = 3,
                            Title = "I found alien last year",
                            UserId = 1
                        },
                        new
                        {
                            ForumId = 2,
                            Body = "...",
                            Created_at = new DateTime(2024, 5, 5, 23, 14, 30, 704, DateTimeKind.Local).AddTicks(6477),
                            Like = 18,
                            Title = "Hello from another world",
                            UserId = 2
                        });
                });

            modelBuilder.Entity("Blog_Management_System.Models.Status", b =>
                {
                    b.Property<int>("StatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StatusId"));

                    b.Property<string>("StatusName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StatusId");

                    b.ToTable("Statuses");

                    b.HasData(
                        new
                        {
                            StatusId = 1,
                            StatusName = "Hot"
                        },
                        new
                        {
                            StatusId = 2,
                            StatusName = "New"
                        });
                });

            modelBuilder.Entity("Blog_Management_System.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Created_at = new DateTime(2024, 5, 5, 23, 14, 30, 704, DateTimeKind.Local).AddTicks(6497),
                            Role = "admin",
                            Username = "chukka"
                        },
                        new
                        {
                            Id = 2,
                            Created_at = new DateTime(2024, 5, 5, 23, 14, 30, 704, DateTimeKind.Local).AddTicks(6498),
                            Role = "user",
                            Username = "otto"
                        },
                        new
                        {
                            Id = 3,
                            Created_at = new DateTime(2024, 5, 5, 23, 14, 30, 704, DateTimeKind.Local).AddTicks(6499),
                            Role = "user",
                            Username = "Juijui"
                        });
                });

            modelBuilder.Entity("CategoryForum", b =>
                {
                    b.Property<int>("CategoriesCategoryId")
                        .HasColumnType("int");

                    b.Property<int>("ForumsForumId")
                        .HasColumnType("int");

                    b.HasKey("CategoriesCategoryId", "ForumsForumId");

                    b.HasIndex("ForumsForumId");

                    b.ToTable("CategoryForum");
                });

            modelBuilder.Entity("ForumStatus", b =>
                {
                    b.Property<int>("ForumsForumId")
                        .HasColumnType("int");

                    b.Property<int>("StatusesStatusId")
                        .HasColumnType("int");

                    b.HasKey("ForumsForumId", "StatusesStatusId");

                    b.HasIndex("StatusesStatusId");

                    b.ToTable("ForumStatus");
                });

            modelBuilder.Entity("Blog_Management_System.Models.Comment", b =>
                {
                    b.HasOne("Blog_Management_System.Models.Forum", "Forum")
                        .WithMany("Comments")
                        .HasForeignKey("ForumId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Blog_Management_System.Models.User", "User")
                        .WithMany("Comments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Forum");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Blog_Management_System.Models.Forum", b =>
                {
                    b.HasOne("Blog_Management_System.Models.User", "User")
                        .WithMany("Forums")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("CategoryForum", b =>
                {
                    b.HasOne("Blog_Management_System.Models.Category", null)
                        .WithMany()
                        .HasForeignKey("CategoriesCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Blog_Management_System.Models.Forum", null)
                        .WithMany()
                        .HasForeignKey("ForumsForumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ForumStatus", b =>
                {
                    b.HasOne("Blog_Management_System.Models.Forum", null)
                        .WithMany()
                        .HasForeignKey("ForumsForumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Blog_Management_System.Models.Status", null)
                        .WithMany()
                        .HasForeignKey("StatusesStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Blog_Management_System.Models.Forum", b =>
                {
                    b.Navigation("Comments");
                });

            modelBuilder.Entity("Blog_Management_System.Models.User", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Forums");
                });
#pragma warning restore 612, 618
        }
    }
}
